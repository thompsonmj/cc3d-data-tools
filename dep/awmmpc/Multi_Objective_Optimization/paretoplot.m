function [] = paretoplot(out,opt)
%PARETOPLOT plots the Pareto Front and Manifold in two to three dimensions,
%   using the output structure from the Pareto generation function, NNC.
%   
%   SYNTAX:
%   [] = paretoplot(out,opt)
%
%   INPUTS:
%   out: [structure] output structure generated by nnc.
%   opt: [structure] options structure for plotting details with fields:
%       all - [0 {1}] 
%           Logical to plot all best gradient solutions or only
%           globally non-dominated solutions.
%       fixscale - [{0} 1]  
%           Logical to plot all axes on the same scale.  Use only if the
%           objective functions are all on the same absolute scale.
%       plotsurf - [{0} 1]
%           Logical to plot a surface respresentation (DeLaunay
%           triangulation) of the Pareto Front
%       surfall - [{0} 1]
%           For use with 'plotsurf' = 1, Logical to include all best
%           gradient solutions, not just globally non-dominated points, in
%           the triangulated surface representation.  Requires 'all' = 1;
%
%   Note: Type 'help plot' for syntax to modify plot axes, labels, etc.
%   
%   Written by: Michael Pargett
%   Last revision: 5/8/2012 (Jeffrey Perley)


%Default options
all = 1;
plotsurf = 0;
surfall = 0; %#ok<NASGU>
fixscale = 0;


if exist('opt','var') && isstruct(opt)
    of = fieldnames(opt);
    for i = 1:length(of)
        eval([of{i}, ' = opt.(of{i});']);
    end
end

%Plot appearance settings
AnchMrk = 'b+';
AnchSz = 25;
AnchWt = 1;

UtpMrk = 'b*';
UtpSz = 13;

AllMrk = 'rx';
GblMrk = 'ko';


if exist('all','var') && all
    xall = cell2mat( struct2cell( cell2mat(out.xVals) ) );
    yall = cell2mat(out.yVals');
else
    xall = nan(3,1);
    yall = nan(3,1);
end

xout = cell2mat( struct2cell( cell2mat(out.xVals(out.gblPrto)) ) );
yout = cell2mat(out.yVals(out.gblPrto)');

xanch = cell2mat( struct2cell( cell2mat(out.xAnchor) ) );
yanch = cell2mat( out.yAnchor' );

utp = out.yUtopia;

xNames = fieldnames(out.xVals{1});

%Plot 2D Manifold, if appropriate
if size(xout, 1) == 2
    figure(); hold on;
    %Data points
    plot(xout(1,:),xout(2,:),GblMrk,xall(1,:),xall(2,:),AllMrk);
    %Anchor points
    plot(xanch(1,:),xanch(2,:),AnchMrk,'MarkerSize',AnchSz,'LineWidth',AnchWt);
    title('Pareto Manifold in first 2 dimensions');
    xlabel(xNames{1}); ylabel(xNames{2});
    set(gca,'Box','on','XGrid','on','YGrid','on');
end

%Plot 3D Manifold, if appropriate
if size(xout, 1) > 2
    figure(); hold on;
    %Data points
    plot3(xout(1,:),xout(2,:),xout(3,:),GblMrk,xall(1,:),xall(2,:),xall(3,:),AllMrk);
    %Anchor points
    plot3(xanch(1,:),xanch(2,:),xanch(3,:),AnchMrk,'MarkerSize',AnchSz,'LineWidth',AnchWt);
    title('Pareto Manifold in first 3 dimensions');
    xlabel(xNames{1}); ylabel(xNames{2}); zlabel(xNames{3});
    set(gca,'Box','on','XGrid','on','YGrid','on','ZGrid','on');
end

%Plot 2D Front, if appropriate
if size(yout, 1) == 2
    figure(); hold on;
    %Data points
    plot(yout(1,:),yout(2,:),GblMrk,yall(1,:),yall(2,:),AllMrk);
    %Anchor points
    plot(yanch(1,:),yanch(2,:),AnchMrk,'MarkerSize',AnchSz,'LineWidth',AnchWt);
    %Utopian point
    plot(utp(1,:),utp(2,:),UtpMrk,'MarkerSize',UtpSz);
    title('Pareto Front in first 2 objectives');
    xlabel('Objective 1'); ylabel('Objective 2');
    set(gca,'Box','on','XGrid','on','YGrid','on');
    if fixscale
        newlim = getlim(gca,2); %#ok<UNRCH>
        set(gca,'XLim',newlim,'YLim',newlim,'ZLim',newlim);
    end
end

%Plot 3D Front, if appropriate
if size(yout, 1) > 2
    figure(); hold on;
    
    if plotsurf %IF plotting surface over pareto front points
        if surfall  %#ok<UNRCH>
            sdata = yall;
        else
            sdata = yout;
        end
        
        %Create delaunay triangulation and plot
        tri = delaunay(sdata(1,:),sdata(2,:));
        zdata = sqrt( sum(sdata.^2, 1) );
        color = mean( zdata(tri), 2);
        trisurf(tri, sdata(1,:), sdata(2,:), sdata(3,:), color);
        axishandle = get(gca);
        set(axishandle.Children,'FaceAlpha',0.7);  %Make surface 70% opaque
            %Note, this muste be the first plot on this axis for handle to
            %be correct.
        cLim = caxis;
        cLim(1) = sqrt(sum(utp.^2));
        caxis(cLim);
    end
    
    %Data points
    plot3(yout(1,:),yout(2,:),yout(3,:),GblMrk,yall(1,:),yall(2,:),yall(3,:),AllMrk);
    %Anchor points
    plot3(yanch(1,:),yanch(2,:),yanch(3,:),AnchMrk,'MarkerSize',AnchSz,'LineWidth',AnchWt);
    %Utopian point
    plot3(utp(1,:),utp(2,:),utp(3,:),UtpMrk,'MarkerSize',UtpSz);
    

    title('Pareto Front in first 3 objectives');
    xlabel('Objective 1'); ylabel('Objective 2'); zlabel('Objective 3');
    set(gca,'Box','on','XGrid','on','YGrid','on','ZGrid','on');
    if fixscale
        newlim = getlim(gca,3); %#ok<UNRCH>
        set(gca,'XLim',newlim,'YLim',newlim,'ZLim',newlim);
    end
end


end






%Subfunction to get maximum limits for fixed scaling
function newLim = getlim(axis_handle, dim)

prop = get(axis_handle);

limits = [prop.XLim,prop.YLim];

if dim > 2
    limits = [limits,prop.ZLim];
end

minLim = min(limits);
maxLim = max(limits);

newLim = [minLim maxLim];

end

